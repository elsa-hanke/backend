import org.gradle.internal.os.OperatingSystem

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:${kotlinVersion}"
    implementation "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"

    kapt "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    kapt "org.hibernate:hibernate-jpamodelgen:${hibernateVersion}"

    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:${kotlinVersion}"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"
}

kotlin {
    jvmToolchain(17)
}

allOpen {
    annotation("jakarta.persistence.Entity")
    annotation("jakarta.persistence.MappedSuperclass")
    annotation("jakarta.persistence.Embeddable")
}

// ktlint {
//     ignoreFailures = true
//     disabledRules = ["no-wildcard-imports", "filename"]
// }
// check.dependsOn ktlintCheck

detekt {
    toolVersion = detektVersion
    source = files("src/main/kotlin")
    config = files("detekt-config.yml")
}

if (OperatingSystem.current().isWindows()) {
    bootRun {
        doFirst {
            classpath += files("$buildDir/classes/kotlin/main")
        }
    }
}

jacocoTestReport {
    // Add Kotlin sources to Jacoco source dirs
    sourceDirectories.from += sourceSets.main.kotlin.srcDirs
}

sonarqube {
    properties {
        property "sonar.kotlin.detekt.reportPaths", detekt.reports.xml.destination
    }
}

check.dependsOn jacocoTestReport

variables:
  vmImageName: 'Ubuntu 16.04'
  isMain: $[eq(variables['Build.SourceBranch'], 'refs/heads/main')]

stages:
  - stage: Build
    displayName: Build and push stage
    jobs:
      - job: Build
        pool:
          vmImage: $(vmImageName)
        variables:
          NODE_VERSION: 12.16.1
          SPRING_OUTPUT_ANSI_ENABLED: NEVER
          SPRING_JPA_SHOW_SQL: false
          JHI_DISABLE_WEBPACK_LOGS: true
          GRADLE_USER_HOME: $(Pipeline.Workspace)/.gradle

        steps:
          - task: Cache@2
            inputs:
              key: 'gradle | "$(Agent.OS)"'
              restoreKeys: gradle
              path: $(GRADLE_USER_HOME)
            displayName: Gradle build cache
          - script: |
              ./gradlew checkstyleNohttp
              ./gradlew clean test integrationTest
            displayName: 'Test'
          - script: |
              ./gradlew --build-cache build -x test integrationTest
            displayName: 'Build'
          - script: |
              ./gradlew bootJar -Pprod -x test jibDockerBuild
            displayName: 'Build image'
          - script: |
              ./gradlew --stop
            displayName: 'Gradle daemon stop'
          - task: ECRPushImage@1
            condition: eq(variables.isMain, true)
            inputs:
              awsCredentials: 'elsa-ci'
              regionName: 'eu-west-1'
              imageSource: 'imagename'
              sourceImageName: 'elsabackend'
              repositoryName: 'elsa-backend'
            displayName: 'Push image'
  
  - stage: Deploy
    displayName: Deploy stage
    dependsOn: Build
    condition: and(succeeded(), eq(variables.isMain, true))
    jobs:
      - job: Deploy
        pool:
          vmImage: $(vmImageName)
        steps:
          - task: AmazonWebServices.aws-vsts-tools.AWSCLI.AWSCLI@1
            inputs:
              awsCredentials: 'elsa-ci'
              regionName: 'eu-west-1'
              awsCommand: 'ecs'
              awsSubcommand: 'update-service'
              awsArguments: '--cluster elsa-dev-cluster --service ecs-dev-backend --force-new-deployment'
            displayName: Force update ecs service
variables:
  vmImageName: 'Ubuntu-latest'

stages:
  - stage: Build
    displayName: Build and push stage
    jobs:
      - job: Build
        pool:
          vmImage: $(vmImageName)
        variables:
          NODE_VERSION: 12.16.1
          SPRING_OUTPUT_ANSI_ENABLED: NEVER
          SPRING_JPA_SHOW_SQL: false
          JHI_DISABLE_WEBPACK_LOGS: true
          GRADLE_USER_HOME: $(Pipeline.Workspace)/.gradle
          TERM: dumb

        steps:
          - task: JavaToolInstaller@0
            inputs:
              versionSpec: '11'
              jdkArchitectureOption: 'x64'
              jdkSourceOption: 'PreInstalled'
          - task: Cache@2
            inputs:
              key: 'gradle | "$(Agent.OS)"'
              restoreKeys: gradle
              path: $(GRADLE_USER_HOME)
            displayName: Gradle build cache
          - script: |
              ./gradlew clean test integrationTest
            displayName: 'Test'
          - script: |
              ./gradlew --build-cache -Pprod build -x test integrationTest
            displayName: 'Build'
          - script: |
              ./gradlew bootJar -Pprod -x test jibDockerBuild
            displayName: 'Build image'
          - script: |
              ./gradlew --stop
            displayName: 'Gradle daemon stop'
          - task: ECRPushImage@1
            inputs:
              awsCredentials: 'sandbox-elsa-ci'
              regionName: 'eu-west-1'
              imageSource: 'imagename'
              sourceImageName: 'elsabackend'
              repositoryName: 'ecr-sandbox-backend'
            displayName: 'Push image'

  - stage: Deploy_maintenance_page_dev
    displayName: Deploy maintenance page dev
    dependsOn:
      - Build
    # condition: and(succeeded(), eq(variables.isMain, true))
    jobs:
      - deployment: Deploy
        displayName: Deploy maintenance page
        environment:
          name: "sandbox"
        pool:
          vmImage: $(vmImageName)
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self
                - script: mv $(Build.ArtifactStagingDirectory)/src/main/resources/templates/huoltokatko.html "$(Build.ArtifactStagingDirectory)/src/main/resources/templates/index.html"
                - task: S3Upload@1
                  inputs:
                    awsCredentials: "sandbox-elsa-ci"
                    regionName: "eu-west-1"
                    bucketName: "sandbox.elsapalvelu.fi"
                    sourceFolder: "$(Build.SourcesDirectory)/src/main/resources/templates/"
                    globExpressions: "index.html"
                  displayName: "Deploy to S3"
                - task: AWSCLI@1
                  inputs:
                    awsCredentials: "sandbox-elsa-ci"
                    regionName: "eu-west-1"
                    awsCommand: "cloudfront"
                    awsSubCommand: "create-invalidation"
                    awsArguments: '--distribution-id EHJY1V5AOBIP --paths "/*"'

  - stage: Deploy_backend_sandbox
    displayName: Deploy backend sandbox
    dependsOn: Build
    jobs:
      - deployment: Deploy
        displayName: Deploy backend sandbox
        environment: "sandbox"
        pool:
          vmImage: $(vmImageName)
        strategy:
          runOnce:
            deploy:
              steps:
                - task: AmazonWebServices.aws-vsts-tools.AWSShellScript.AWSShellScript@1
                  inputs:
                    awsCredentials: 'sandbox-elsa-ci'
                    regionName: 'eu-west-1'
                    scriptType: inline
                    inlineScript: 'aws ecs update-service --cluster elsa-sandbox-cluster --service elsa-sandbox-backend-service --task-definition elsa-sandbox-backend --enable-execute-command --force-new-deployment > /dev/null'
                  displayName: Force update ecs service
